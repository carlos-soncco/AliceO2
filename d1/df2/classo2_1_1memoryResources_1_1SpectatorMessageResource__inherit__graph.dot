digraph "o2::memoryResources::SpectatorMessageResource"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::memoryResources\l::SpectatorMessageResource\n|# message\l|+ SpectatorMessageResource()\l+ SpectatorMessageResource()\l+ getMessage()\l+ getTransportFactory()\l+ getNumberOfMessages()\l# do_allocate()\l# do_deallocate()\l# do_is_equal()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{o2::memoryResources\l::FairMQMemoryResource\n||+ getMessage()\l+ getTransportFactory()\l+ getNumberOfMessages()\l}",height=0.2,width=0.4,color="black",URL="$d1/dcc/classo2_1_1memoryResources_1_1FairMQMemoryResource.html",tooltip="All FairMQ related memory resources need to inherit from this interface class for the getMessage() ap..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{boost::container::pmr\l::memory_resource\n||}",height=0.2,width=0.4,color="grey75"];
}
